{"ast":null,"code":"import axios from'axios';import config from'../config';const API_URL=config.apiUrl;// Create axios instance\nconst api=axios.create({baseURL:'http://localhost:3000/api',// Use absolute URL instead of relative\nheaders:{'Content-Type':'application/json'},withCredentials:true});// Add request interceptor to include auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>Promise.reject(error));// Auth endpoints\nexport const register=userData=>api.post('/auth/register',userData);export const login=credentials=>api.post('/auth/login',credentials);export const logout=()=>api.post('/auth/logout');// Products endpoints\nexport const getProducts=()=>api.get('/products');export const getProductById=id=>api.get(`/products/${id}`);// Cart endpoints\nexport const getCart=userId=>api.get(`/carts/${userId}`);export const getCartByUserId=userId=>api.get(`/carts/user/${userId}`);export const createCart=userData=>api.post('/carts',userData);export const addToCart=cartItemData=>api.post('/cart-items',cartItemData);export const updateCartItem=(id,cartItemData)=>api.put(`/cart-items/${id}`,cartItemData);export const removeCartItem=id=>api.delete(`/cart-items/${id}`);// Orders endpoints\nexport const getUserOrders=userId=>api.get(`/orders?userId=${userId}`);export const checkout=userId=>api.post('/checkout',{userId});// FIX: Don't use axios directly, use your configured api instance\nexport const getCartSummary=userId=>api.get(`/carts/summary/${userId}`);export default api;","map":{"version":3,"names":["axios","config","API_URL","apiUrl","api","create","baseURL","headers","withCredentials","interceptors","request","use","token","localStorage","getItem","Authorization","error","Promise","reject","register","userData","post","login","credentials","logout","getProducts","get","getProductById","id","getCart","userId","getCartByUserId","createCart","addToCart","cartItemData","updateCartItem","put","removeCartItem","delete","getUserOrders","checkout","getCartSummary"],"sources":["C:/Users/Emili/Desktop/Studies/Codecademy/ecommerce-api/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport config from '../config'\r\n\r\nconst API_URL = config.apiUrl;\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:3000/api',  // Use absolute URL instead of relative\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    withCredentials: true,\r\n});\r\n\r\n// Add request interceptor to include auth token\r\napi.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n);\r\n\r\n// Auth endpoints\r\nexport const register = (userData) => api.post('/auth/register', userData);\r\nexport const login = (credentials) => api.post('/auth/login', credentials);\r\nexport const logout = () => api.post('/auth/logout');\r\n\r\n// Products endpoints\r\nexport const getProducts = () => api.get('/products'); \r\nexport const getProductById = (id) => api.get(`/products/${id}`); \r\n\r\n// Cart endpoints\r\nexport const getCart = (userId) => api.get(`/carts/${userId}`);\r\nexport const getCartByUserId = (userId) => api.get(`/carts/user/${userId}`);\r\nexport const createCart = (userData) => api.post('/carts', userData);\r\nexport const addToCart = (cartItemData) => api.post('/cart-items', cartItemData);\r\nexport const updateCartItem = (id, cartItemData) => api.put(`/cart-items/${id}`, cartItemData);\r\nexport const removeCartItem = (id) => api.delete(`/cart-items/${id}`);\r\n\r\n// Orders endpoints\r\nexport const getUserOrders = (userId) => api.get(`/orders?userId=${userId}`);\r\nexport const checkout = (userId) => api.post('/checkout', { userId });\r\n// FIX: Don't use axios directly, use your configured api instance\r\nexport const getCartSummary = (userId) => api.get(`/carts/summary/${userId}`);\r\n\r\nexport default api;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,WAAW,CAE9B,KAAM,CAAAC,OAAO,CAAGD,MAAM,CAACE,MAAM,CAE7B;AACA,KAAM,CAAAC,GAAG,CAAGJ,KAAK,CAACK,MAAM,CAAC,CACrBC,OAAO,CAAE,2BAA2B,CAAG;AACvCC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,eAAe,CAAE,IACrB,CAAC,CAAC,CAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACvBV,MAAM,EAAK,CACR,KAAM,CAAAW,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACPX,MAAM,CAACM,OAAO,CAACQ,aAAa,CAAG,UAAUH,KAAK,EAAE,CACpD,CACA,MAAO,CAAAX,MAAM,CACjB,CAAC,CACAe,KAAK,EAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACnC,CAAC,CAED;AACA,MAAO,MAAM,CAAAG,QAAQ,CAAIC,QAAQ,EAAKhB,GAAG,CAACiB,IAAI,CAAC,gBAAgB,CAAED,QAAQ,CAAC,CAC1E,MAAO,MAAM,CAAAE,KAAK,CAAIC,WAAW,EAAKnB,GAAG,CAACiB,IAAI,CAAC,aAAa,CAAEE,WAAW,CAAC,CAC1E,MAAO,MAAM,CAAAC,MAAM,CAAGA,CAAA,GAAMpB,GAAG,CAACiB,IAAI,CAAC,cAAc,CAAC,CAEpD;AACA,MAAO,MAAM,CAAAI,WAAW,CAAGA,CAAA,GAAMrB,GAAG,CAACsB,GAAG,CAAC,WAAW,CAAC,CACrD,MAAO,MAAM,CAAAC,cAAc,CAAIC,EAAE,EAAKxB,GAAG,CAACsB,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC,CAEhE;AACA,MAAO,MAAM,CAAAC,OAAO,CAAIC,MAAM,EAAK1B,GAAG,CAACsB,GAAG,CAAC,UAAUI,MAAM,EAAE,CAAC,CAC9D,MAAO,MAAM,CAAAC,eAAe,CAAID,MAAM,EAAK1B,GAAG,CAACsB,GAAG,CAAC,eAAeI,MAAM,EAAE,CAAC,CAC3E,MAAO,MAAM,CAAAE,UAAU,CAAIZ,QAAQ,EAAKhB,GAAG,CAACiB,IAAI,CAAC,QAAQ,CAAED,QAAQ,CAAC,CACpE,MAAO,MAAM,CAAAa,SAAS,CAAIC,YAAY,EAAK9B,GAAG,CAACiB,IAAI,CAAC,aAAa,CAAEa,YAAY,CAAC,CAChF,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAACP,EAAE,CAAEM,YAAY,GAAK9B,GAAG,CAACgC,GAAG,CAAC,eAAeR,EAAE,EAAE,CAAEM,YAAY,CAAC,CAC9F,MAAO,MAAM,CAAAG,cAAc,CAAIT,EAAE,EAAKxB,GAAG,CAACkC,MAAM,CAAC,eAAeV,EAAE,EAAE,CAAC,CAErE;AACA,MAAO,MAAM,CAAAW,aAAa,CAAIT,MAAM,EAAK1B,GAAG,CAACsB,GAAG,CAAC,kBAAkBI,MAAM,EAAE,CAAC,CAC5E,MAAO,MAAM,CAAAU,QAAQ,CAAIV,MAAM,EAAK1B,GAAG,CAACiB,IAAI,CAAC,WAAW,CAAE,CAAES,MAAO,CAAC,CAAC,CACrE;AACA,MAAO,MAAM,CAAAW,cAAc,CAAIX,MAAM,EAAK1B,GAAG,CAACsB,GAAG,CAAC,kBAAkBI,MAAM,EAAE,CAAC,CAE7E,cAAe,CAAA1B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}