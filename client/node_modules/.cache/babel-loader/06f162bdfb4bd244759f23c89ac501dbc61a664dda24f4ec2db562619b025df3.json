{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emili\\\\Desktop\\\\Studies\\\\Codecademy\\\\ecommerce-api\\\\client\\\\src\\\\components\\\\common\\\\ProtectedRoute.jsx\";\n// This component will handle routes that require authentication\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  isAuthenticated,\n  children\n}) => {\n  if (!isAuthenticated) {\n    // Redirect to login if not authenticated\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 16\n    }, this);\n  }\n  return children;\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","isAuthenticated","children","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Emili/Desktop/Studies/Codecademy/ecommerce-api/client/src/components/common/ProtectedRoute.jsx"],"sourcesContent":["// This component will handle routes that require authentication\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ isAuthenticated, children }) => {\r\n    if (!isAuthenticated) {\r\n        // Redirect to login if not authenticated\r\n        return <Navigate to='/login' replace />;\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,eAAe;EAAEC;AAAS,CAAC,KAAK;EACtD,IAAI,CAACD,eAAe,EAAE;IAClB;IACA,oBAAOF,OAAA,CAACF,QAAQ;MAACM,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C;EAEA,OAAON,QAAQ;AACnB,CAAC;AAACO,EAAA,GAPIT,cAAc;AASpB,eAAeA,cAAc;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}