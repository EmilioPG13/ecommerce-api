{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || '/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true\n});\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Auth endpoints\nexport const register = userData => api.post('/auth/register', userData);\nexport const login = credentials => api.post('/auth/login', credentials);\nexport const logout = () => api.post('/auth/logout');\n\n// Products endpoints\nexport const getProducts = () => api.get('/products');\nexport const getProductById = id => api.get(`/products/${id}`);\n\n// Cart endpoints\nexport const getCart = userId => api.get(`/carts/${userId}`);\n// FIX: Don't use axios directly, use your configured api instance\nexport const getCartByUserId = userId => api.get(`/carts/user/${userId}`);\nexport const createCart = userData => api.post('/carts', userData);\nexport const addToCart = cartItemData => api.post('/cart-items', cartItemData);\nexport const updateCartItem = (id, cartItemData) => api.put(`/cart-items/${id}`, cartItemData);\nexport const removeCartItem = id => api.delete(`/cart-items/${id}`);\n\n// Orders endpoints\nexport const getUserOrders = userId => api.get(`/orders?userId=${userId}`);\nexport const checkout = userId => api.post('/checkout', {\n  userId\n});\n// FIX: Don't use axios directly, use your configured api instance\nexport const getCartSummary = userId => api.get(`/carts/summary/${userId}`);\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","register","userData","post","login","credentials","logout","getProducts","get","getProductById","id","getCart","userId","getCartByUserId","createCart","addToCart","cartItemData","updateCartItem","put","removeCartItem","delete","getUserOrders","checkout","getCartSummary"],"sources":["C:/Users/Emili/Desktop/Studies/Codecademy/ecommerce-api/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || '/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n    baseURL: API_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n    withCredentials: true,\r\n});\r\n\r\n// Add request interceptor to include auth token\r\napi.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n);\r\n\r\n// Auth endpoints\r\nexport const register = (userData) => api.post('/auth/register', userData);\r\nexport const login = (credentials) => api.post('/auth/login', credentials);\r\nexport const logout = () => api.post('/auth/logout');\r\n\r\n// Products endpoints\r\nexport const getProducts = () => api.get('/products');\r\nexport const getProductById = (id) => api.get(`/products/${id}`);\r\n\r\n// Cart endpoints\r\nexport const getCart = (userId) => api.get(`/carts/${userId}`);\r\n// FIX: Don't use axios directly, use your configured api instance\r\nexport const getCartByUserId = (userId) => api.get(`/carts/user/${userId}`);\r\nexport const createCart = (userData) => api.post('/carts', userData);\r\nexport const addToCart = (cartItemData) => api.post('/cart-items', cartItemData);\r\nexport const updateCartItem = (id, cartItemData) => api.put(`/cart-items/${id}`, cartItemData);\r\nexport const removeCartItem = (id) => api.delete(`/cart-items/${id}`);\r\n\r\n// Orders endpoints\r\nexport const getUserOrders = (userId) => api.get(`/orders?userId=${userId}`);\r\nexport const checkout = (userId) => api.post('/checkout', { userId });\r\n// FIX: Don't use axios directly, use your configured api instance\r\nexport const getCartSummary = (userId) => api.get(`/carts/summary/${userId}`);\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,MAAM;;AAEvD;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACrBC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACL,cAAc,EAAE;EACpB,CAAC;EACDC,eAAe,EAAE;AACrB,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACvBC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAK,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACnC,CAAC;;AAED;AACA,OAAO,MAAMG,QAAQ,GAAIC,QAAQ,IAAKjB,GAAG,CAACkB,IAAI,CAAC,gBAAgB,EAAED,QAAQ,CAAC;AAC1E,OAAO,MAAME,KAAK,GAAIC,WAAW,IAAKpB,GAAG,CAACkB,IAAI,CAAC,aAAa,EAAEE,WAAW,CAAC;AAC1E,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAMrB,GAAG,CAACkB,IAAI,CAAC,cAAc,CAAC;;AAEpD;AACA,OAAO,MAAMI,WAAW,GAAGA,CAAA,KAAMtB,GAAG,CAACuB,GAAG,CAAC,WAAW,CAAC;AACrD,OAAO,MAAMC,cAAc,GAAIC,EAAE,IAAKzB,GAAG,CAACuB,GAAG,CAAC,aAAaE,EAAE,EAAE,CAAC;;AAEhE;AACA,OAAO,MAAMC,OAAO,GAAIC,MAAM,IAAK3B,GAAG,CAACuB,GAAG,CAAC,UAAUI,MAAM,EAAE,CAAC;AAC9D;AACA,OAAO,MAAMC,eAAe,GAAID,MAAM,IAAK3B,GAAG,CAACuB,GAAG,CAAC,eAAeI,MAAM,EAAE,CAAC;AAC3E,OAAO,MAAME,UAAU,GAAIZ,QAAQ,IAAKjB,GAAG,CAACkB,IAAI,CAAC,QAAQ,EAAED,QAAQ,CAAC;AACpE,OAAO,MAAMa,SAAS,GAAIC,YAAY,IAAK/B,GAAG,CAACkB,IAAI,CAAC,aAAa,EAAEa,YAAY,CAAC;AAChF,OAAO,MAAMC,cAAc,GAAGA,CAACP,EAAE,EAAEM,YAAY,KAAK/B,GAAG,CAACiC,GAAG,CAAC,eAAeR,EAAE,EAAE,EAAEM,YAAY,CAAC;AAC9F,OAAO,MAAMG,cAAc,GAAIT,EAAE,IAAKzB,GAAG,CAACmC,MAAM,CAAC,eAAeV,EAAE,EAAE,CAAC;;AAErE;AACA,OAAO,MAAMW,aAAa,GAAIT,MAAM,IAAK3B,GAAG,CAACuB,GAAG,CAAC,kBAAkBI,MAAM,EAAE,CAAC;AAC5E,OAAO,MAAMU,QAAQ,GAAIV,MAAM,IAAK3B,GAAG,CAACkB,IAAI,CAAC,WAAW,EAAE;EAAES;AAAO,CAAC,CAAC;AACrE;AACA,OAAO,MAAMW,cAAc,GAAIX,MAAM,IAAK3B,GAAG,CAACuB,GAAG,CAAC,kBAAkBI,MAAM,EAAE,CAAC;AAE7E,eAAe3B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}