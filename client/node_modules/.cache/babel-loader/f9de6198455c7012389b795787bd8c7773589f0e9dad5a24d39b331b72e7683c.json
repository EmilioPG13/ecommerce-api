{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emili\\\\Desktop\\\\Studies\\\\Codecademy\\\\ecommerce-api\\\\client\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { login } from '../services/api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [formData, useFormData] = useState({\n    email: '',\n    pasword: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitError, setSubmitError] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Check for success message from registration\n  useEffect(() => {\n    // Set success message from registration\n    setSubmitError({\n      type: 'success',\n      message: location.state.message\n    });\n\n    // Clear location state after displaying message\n    navigate(location.pathname, {\n      replace: true,\n      state: {}\n    });\n  }, [location, navigate]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n\n    //Clear field-specific error when user starts typing again\n    if (errors[name]) {\n      setErrors(prevErrors => ({\n        ...prevErrors,\n        [name]: null\n      }));\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n\n    // Email validation\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    }\n\n    // Password validation\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    setIsSubmitting(true);\n    setSubmitError(null);\n    try {\n      const {\n        email,\n        password\n      } = formData;\n      const response = await login({\n        email,\n        password\n      });\n\n      // Call the login handler from App.js with the token\n      onLogin(response.data.token);\n\n      // User will be redirected automatically via the App.js routing logic\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setSubmitError({\n        type: 'error',\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed. Please check your credentials.'\n      });\n      console.error('Login error:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const handleGoogleLogin = () => {\n    // Will be implemented when backend supports it\n    console.log('Google login clicked');\n    setSubmitError({\n      type: 'error',\n      message: 'Google login is not implemented yet.'\n    });\n    const handleFacebookLogin = () => {\n      // Will be implemented when backend supports it\n      console.log('Facebook login clicked');\n      setSubmitError({\n        type: 'error',\n        message: 'Facebook login is not implemented yet.'\n      });\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"py-8 px-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto bg-white rounded-lg shadow-md overflow-hidden p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2x1 font-bold text-center text-gray-800 mb-6\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), submitError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `border px-4 py-3 rounded mb-4 ${submitError.type === 'success' ? 'bg-green-100 border-green-400 text-green-700' : 'bg-red-100 border-red-400 text-red-700'}`,\n        children: submitError.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"block text-gray-700 font-medium mb-1\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            className: `w-full px-3 py-2 border rounded-md ${errors.email ? 'border-red-500' : 'border-gray-300'} focus:outline-none focus:ring-1 focus:ring-blue-500`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-red-500 text-sm mt-1\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"gnXC/oKWX+1kMqZ9iA2KW/wmms4=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","login","jsxDEV","_jsxDEV","Login","onLogin","_s","formData","useFormData","email","pasword","errors","setErrors","isSubmitting","setIsSubmitting","submitError","setSubmitError","navigate","location","type","message","state","pathname","replace","handleChange","e","name","value","target","setFormData","prevState","prevErrors","validateForm","newErrors","trim","password","Object","keys","length","handleSubmit","preventDefault","response","data","token","error","_error$response","_error$response$data","console","handleGoogleLogin","log","handleFacebookLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Emili/Desktop/Studies/Codecademy/ecommerce-api/client/src/pages/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { login } from '../services/api.js';\r\n\r\nconst Login = ({ onLogin }) => {\r\n    const [formData, useFormData] = useState({\r\n        email: '',\r\n        pasword: '',\r\n    });\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [submitError, setSubmitError] = useState(null);\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    // Check for success message from registration\r\n    useEffect(() => {\r\n        // Set success message from registration\r\n        setSubmitError({ type: 'success', message: location.state.message });\r\n\r\n        // Clear location state after displaying message\r\n        navigate(location.pathname, { replace: true, state: {} });\r\n    }, [location, navigate]);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n\r\n        //Clear field-specific error when user starts typing again\r\n        if (errors[name]) {\r\n            setErrors(prevErrors => ({\r\n                ...prevErrors,\r\n                [name]: null\r\n            }));\r\n        }\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const newErrors = {};\r\n\r\n        // Email validation\r\n        if (!formData.email.trim()) {\r\n            newErrors.email = 'Email is required';\r\n        }\r\n\r\n        // Password validation\r\n        if (!formData.password) {\r\n            newErrors.password = 'Password is required'\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!validateForm()) {\r\n            return;\r\n        }\r\n\r\n        setIsSubmitting(true);\r\n        setSubmitError(null);\r\n\r\n        try {\r\n            const { email, password } = formData;\r\n            const response = await login({ email, password });\r\n\r\n            // Call the login handler from App.js with the token\r\n            onLogin(response.data.token);\r\n\r\n            // User will be redirected automatically via the App.js routing logic\r\n        } catch (error) {\r\n            setSubmitError({\r\n                type: 'error',\r\n                message: error.response?.data?.error || 'Login failed. Please check your credentials.'\r\n            });\r\n            console.error('Login error:', error);\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n    const handleGoogleLogin = () => {\r\n        // Will be implemented when backend supports it\r\n        console.log('Google login clicked');\r\n        setSubmitError({\r\n            type: 'error',\r\n            message: 'Google login is not implemented yet.'\r\n        });\r\n\r\n        const handleFacebookLogin = () => {\r\n            // Will be implemented when backend supports it\r\n            console.log('Facebook login clicked');\r\n            setSubmitError({\r\n                type: 'error',\r\n                message: 'Facebook login is not implemented yet.'\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='py-8 px-4'>\r\n            <div className='max-w-md mx-auto bg-white rounded-lg shadow-md overflow-hidden p-6'>\r\n                <h1 className='text-2x1 font-bold text-center text-gray-800 mb-6'>Log in</h1>\r\n\r\n                {submitError && (\r\n                    <div className={`border px-4 py-3 rounded mb-4 ${\r\n                        submitError.type === 'success'\r\n                        ? 'bg-green-100 border-green-400 text-green-700'\r\n                        : 'bg-red-100 border-red-400 text-red-700'\r\n                    }`}>\r\n                        {submitError.message}\r\n                    </div>\r\n                )}\r\n\r\n                <form onSubmit={handleSubmit} className='space-y-4'> \r\n                    <div>\r\n                        <label htmlFor=\"email\" className='block text-gray-700 font-medium mb-1'>\r\n                            Email\r\n                        </label>\r\n                        <input \r\n                            type=\"email\"\r\n                            id='email'\r\n                            name='email'\r\n                            value={formData.email}\r\n                            onChange={handleChange}\r\n                            className={`w-full px-3 py-2 border rounded-md ${\r\n                                errors.email ? 'border-red-500' : 'border-gray-300'\r\n                            } focus:outline-none focus:ring-1 focus:ring-blue-500`}\r\n                        />\r\n                        {errors.email && (\r\n                            <p className='text-red-500 text-sm mt-1'>{errors.password}</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div>\r\n                        \r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}